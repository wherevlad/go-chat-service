name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/chat-server"
  IMAGE_NAME: "crud-server"
  CONTAINER_NAME: "crud-server-container"

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f Dockerfile .

  migrate:
    name: migrate
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1

      - name: Checkout master
        uses: actions/checkout@v4

      - name: Set up Goose
        uses: mscno/setup-goose@v1

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Run migrations
        run: goose -dir ${{ vars.MIGRATION_DIR }} postgres ${{ vars.PG_DSN }} up -v

  deploy-image:
    runs-on: ubuntu-latest
    needs: [image-build-and-push, migrate]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #- name: Setup SSH
      #  uses: webfactory/ssh-agent@v0.9.0
      #  with:
      #    ssh-private-key: ${{ secrets.SSH_KEY }}

      #- name: Copy docker-compose.yaml
      #  run: scp -o StrictHostKeyChecking=no ./docker-compose.yaml ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_HOST }}:${{ vars.SERVICE_PATH }}

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Set up variables
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)
            
            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
            
            # Stop running container
            docker stop $CONTAINER_NAME
            
            # Remove old container
            docker rm $CONTAINER_NAME
            
            # Run a new container from a new image
            docker run -d -p ${{ vars.GRPC_PORT_EXTERNAL }}:${{ vars.GRPC_PORT }} --name $CONTAINER_NAME -t $REGISTRY/$IMAGE_NAME:$TAG_NAME